---
interface Props {
  isOpen: boolean;
  onClose: () => void;
}

const { isOpen, onClose } = Astro.props;
---

<div id="email-modal" class={`fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 ${isOpen ? '' : 'hidden'}`}>
  <div class="bg-white rounded-lg p-8 max-w-md w-full mx-4">
    <div class="flex justify-between items-center mb-6">
      <h2 class="text-2xl font-bold text-gray-900">Get Started with Tour Scout</h2>
      <button onclick={onClose} class="text-gray-500 hover:text-gray-700">
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
    </div>
    
    <form id="email-form" class="space-y-4">
      <div>
        <label for="email" class="block text-sm font-medium text-gray-700">Email address</label>
        <input
          type="email"
          id="email"
          name="email"
          required
          class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500"
          placeholder="Enter your email"
        />
      </div>
      
      <button
        type="submit"
        class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
      >
        Get Started
      </button>
    </form>
    
    <div id="success-message" class="hidden mt-4 text-green-600">
      Thank you! Check your email for access to Tour Scout.
    </div>
    
    <div id="error-message" class="hidden mt-4 text-red-600">
      Something went wrong. Please try again.
    </div>
  </div>
</div>

<script>
  const form = document.getElementById('email-form');
  const successMessage = document.getElementById('success-message');
  const errorMessage = document.getElementById('error-message');

  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const email = form.email.value;
    
    try {
      const response = await fetch('/.netlify/functions/collect-email', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ email }),
      });
      
      if (response.ok) {
        form.classList.add('hidden');
        successMessage.classList.remove('hidden');
        // Redirect after 3 seconds
        setTimeout(() => {
          window.location.href = 'https://chat.openai.com/g/g-1234567890-tour-scout';
        }, 3000);
      } else {
        errorMessage.classList.remove('hidden');
      }
    } catch (error) {
      errorMessage.classList.remove('hidden');
    }
  });
</script> 