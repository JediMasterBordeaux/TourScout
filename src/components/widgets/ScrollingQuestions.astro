---
// Comprehensive list of TourScout questions
const questions = [
  // Routing & Travel
  "Can you build a routing table for these tour dates?",
  "What's the drive time from Austin to Phoenix with a day off in between?",
  "What's a good stopover city between Atlanta and Dallas with bus parking?",
  "Is it better to fly or drive from Seattle to Denver?",
  
  // Show Day Logistics
  "What's around the House of Blues in Chicago?",
  "Where's the load-in entrance for The Fillmore Philly?",
  "Any big events in Nashville on June 14 that might affect traffic?",
  "Give me the local essentials near the venue in Portland.",
  
  // Hotel & Lodging
  "Find a mid-range hotel with bus parking near The Roxy in LA.",
  "What's a good boutique hotel near the venue in Seattle?",
  "Where should we put the drivers up in Charlotte?",
  "Which hotels near Red Rocks have bus parking?",
  
  // Food & Wellness
  "Where can the crew get a late-night bite after the show in New Orleans?",
  "Find a local coffee shop near the hotel in Denver.",
  "Any vegan-friendly restaurants near the venue in Austin?",
  "Is there a chiropractor or urgent care near our off-day hotel in Detroit?",
  
  // Day Off & Reset
  "We've got a day off in Kansas City â€” what's there to do nearby?",
  "Find a chill park or walkable area near our hotel in San Diego.",
  "Where can I send laundry near the hotel in Philly?",
  "What gym has day passes in Boston near the Back Bay?",
  
  // Maps & Visuals
  "Can you build me an interactive map for these four tour stops?",
  "Drop pins on late-night food, coffee, and laundry near our venue in Atlanta.",
  "Show the route between these tour cities on a map.",
  
  // Tour Management
  "Give me a downloadable routing table for this tour.",
  "What do I need to watch for on this routing?",
  "Find music-related fun facts about each venue on the tour.",
  "Any special permitting or cabotage concerns for this international leg?",
  
  // Venue Intelligence
  "What's the load-in situation at Madison Square Garden?",
  "Are there any construction projects that might affect load-in next week?",
  "What's the best bus parking option in downtown Nashville?",
];

// Duplicate questions to create seamless loop
const scrollingQuestions = [...questions, ...questions];

// Add category markers to some questions for special styling
const categories = {
  routing: ["Can you build a routing table", "What's the drive time", "Is it better to fly"],
  venue: ["load-in", "House of Blues", "The Fillmore", "Madison Square Garden"],
  food: ["late-night", "coffee shop", "vegan-friendly"],
  wellness: ["chiropractor", "urgent care", "gym"],
};
---

<div class="relative h-64 overflow-hidden text-gray-600 dark:text-gray-300 max-w-3xl mx-auto">
  <div class="questions-wrapper">
    <div class="questions-scroll">
      {scrollingQuestions.map((question, index) => {
        // Determine category for special styling
        const category = Object.entries(categories).find(([_, keywords]) => 
          keywords.some(keyword => question.toLowerCase().includes(keyword.toLowerCase()))
        )?.[0] || 'default';
        
        return (
          <div class={`question-item py-3 pl-6 border-l-4 ${
            category === 'routing' ? "border-blue-500" :
            category === 'venue' ? "border-purple-500" :
            category === 'food' ? "border-green-500" :
            category === 'wellness' ? "border-orange-500" :
            "border-gray-400"
          }`}>
            <p class="text-lg group">
              <span class="question-text">{question}</span>
              {category !== 'default' && 
                <span class={`category-tag text-xs ml-2 px-2 py-1 rounded-full opacity-0 group-hover:opacity-100 transition-opacity ${
                  category === 'routing' ? "bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200" :
                  category === 'venue' ? "bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200" :
                  category === 'food' ? "bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200" :
                  "bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-200"
                }`}>
                  {category}
                </span>
              }
            </p>
          </div>
        );
      })}
    </div>
  </div>
</div>

<style>
  .questions-wrapper {
    position: relative;
    height: 100%;
    overflow: hidden;
    mask-image: linear-gradient(
      to bottom,
      transparent,
      black 15%,
      black 85%,
      transparent
    );
  }

  .questions-scroll {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    animation: scrollQuestions 45s linear infinite;
  }

  .question-item {
    opacity: 0.7;
    transition: all 0.3s ease;
    background: transparent;
    margin: 0.5rem 0;
    transform: translateX(0);
  }

  .question-item:hover {
    opacity: 1;
    transform: translateX(8px);
    background: rgba(var(--color-primary-rgb), 0.03);
  }

  @keyframes scrollQuestions {
    0% {
      transform: translateY(0);
    }
    100% {
      transform: translateY(-50%);
    }
  }

  .questions-wrapper:hover .questions-scroll {
    animation-play-state: paused;
  }

  .question-text {
    position: relative;
    display: inline;
  }

  .category-tag {
    display: inline-block;
    vertical-align: middle;
    font-size: 0.75rem;
    transition: all 0.3s ease;
  }

  /* Dark mode enhancements */
  :global(.dark) .question-item:hover {
    background: rgba(255, 255, 255, 0.03);
  }
</style>

<script>
  const scrollContainer = document.querySelector('.questions-scroll') as HTMLElement;
  if (scrollContainer) {
    scrollContainer.addEventListener('animationend', () => {
      scrollContainer.style.animation = 'none';
      void scrollContainer.offsetWidth;
      scrollContainer.style.animation = 'scrollQuestions 45s linear infinite';
    });
  }
</script> 